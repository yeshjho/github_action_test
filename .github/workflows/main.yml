on:
  push:
    branches:
      - main

jobs:
  notion_sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install requests
      - run: echo "${{ secrets.NOTION_USERS }}" > notion_users
      - run: |
          echo "import sys  # [event_data_json_file_path, notion_api_key, notion_database_id, users_file_path]
          import json
          import requests


          users = {}  # email : id
          with open(sys.argv[4], encoding='utf-8') as f:
              for line in f.readlines():
                  split = line.split(' ')
                  if len(split) == 2:
                      users[split[0].strip()] = split[1].strip()


          def get_json_data(commit_message, author_email, timestamp, sha, committer_email, url):
              title_split = commit_message.split('\n')
              title = title_split[0]
              message = '\n'.join(title_split[1:])
              author = users.get(author_email, None)
              committer = users.get(committer_email, None)

              to_return = {
                  'parent': {
                      'database_id': sys.argv[3]
                  },
                  'properties': {
                  }
              }

              if title:
                  to_return['properties']['Title'] = {
                      'title': [
                          {
                              'text': {
                                  'content': title
                              }
                          }
                      ]
                  }

              if message:
                  to_return['properties']['Message'] = {
                      'rich_text': [
                          {
                              'text': {
                                  'content': message
                              }
                          }
                      ]
                  }

              if author:
                  to_return['properties']['Author'] = {
                      'people': [
                          {
                              'object': 'user',
                              'id': author
                          }
                      ]
                  }

              if timestamp:
                  to_return['properties']['Timestamp'] = {
                      'date': {
                          'start': timestamp
                      }
                  }

              if sha:
                  to_return['properties']['SHA'] = {
                      'rich_text': [
                          {
                              'text': {
                                  'content': sha
                              }
                          }
                      ]
                  }

              if committer:
                  to_return['properties']['Committer'] = {
                      'people': [
                          {
                              'object': 'user',
                              'id': committer
                          }
                      ]
                  }

              if url:
                  to_return['properties']['URL'] = {
                      'url': url
                  }

              return to_return


          headers = {
              'Authorization': 'Bearer ' + sys.argv[2],
              'Content-Type': 'application/json',
              'Notion-Version': '2022-06-28',
          }

          with open(sys.argv[1], encoding='utf-8') as f:
              event = json.loads(f.read())
              for commit in event['commits']:
                  if not commit['distinct']:
                      continue
                  json_data = get_json_data(commit.get('message', ''), commit.get('author', {}).get('email', ''),
                                            commit.get('timestamp', ''), commit.get('id', ''),
                                            commit.get('committer', {}).get('email', ''), commit.get('url', ''))
                  response = requests.post('https://api.notion.com/v1/pages', headers=headers, json=json_data)
                  if not response.ok:
                      print(f'failed: {commit.get("id")} with {response.status_code}, {response.content}')
          " >> test.py
      - run: python test.py ${{ github.event_path }} ${{ secrets.NOTION_SECRET }} ${{ secrets.NOTION_DATABASE }} notion_users
